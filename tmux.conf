#======================================================================
# General settings 
#======================================================================
set -q -g status-utf8 on                  
setw -q -g utf8 on
set -g default-terminal "xterm-256color"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -g history-limit 20000
set -g display-time 4000
set -g buffer-limit 20
set -sg escape-time 0
set -g remain-on-exit off
set -g repeat-time 300
set -sg escape-time 1
set -g renumber-windows on
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on
set -g set-titles on
set -g set-titles-string "#I:#W"
set  -g base-index 1
setw -g pane-base-index 1
set  -g mouse on

#======================================================================
# Key bindings 
#======================================================================
# Unbind default key bindings, we're going to override
unbind-key "\$"    # rename-session
unbind-key ,       # rename-window
unbind-key %       # split-window -h
unbind-key '"'     # split-window
unbind-key [       # paste-buffer
unbind-key ]    
unbind-key -T root [       # paste-buffer
unbind-key -T root ]    
unbind-key "'"     # select-window
unbind-key n       # next-window
unbind-key p       # previous-window
unbind-key l       # last-window
unbind-key M-n     # next window with alert
unbind-key M-p     # next window with alert
unbind-key o       # focus thru panes
unbind-key &       # kill-window
unbind-key "#"     # list-buffer
unbind-key =       # choose-buffer
unbind-key z       # zoom-pane
unbind-key M-Up    # resize 5 rows up
unbind-key M-Down  # resize 5 rows down
unbind-key M-Right # resize 5 rows right
unbind-key M-Left  # resize 5 rows left

# Reload tmux configuration 
bind-key C-r source-file ~/.tmux.conf \; display "Config reloaded"
# new window and retain cwd
bind-key c new-window -c "#{pane_current_path}"
# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'
# Rename session and window
bind-key r command-prompt -I "#{window_name}" "rename-window '%%'"
bind-key R command-prompt -I "#{session_name}" "rename-session '%%'"
# Split panes
bind-key | split-window -h -c "#{pane_current_path}"
bind-key \\ split-window -fh -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -fv -c "#{pane_current_path}"
# Select pane and windows
bind-key  k select-pane -U # 绑定k为↑
bind-key  j select-pane -D # 绑定j为↓
bind-key  h select-pane -L # 绑定h为←
bind-key  l select-pane -R # 绑定l为→
# Resize pane
# 这里的 -r 开关是 repeatable 可重复的意思，表示只需按一次 PREFIX, 
# 后面可多次连续按绑定键。默认的间隔时间是 500 毫秒，可以设置 repeat-time 来修改
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5
# Zoom pane
bind-key z resize-pane -Z
# Link window
bind-key L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"
# Kill pane/window/session shortcuts
bind-key x kill-pane
bind-key X kill-window
bind-key C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind-key Q confirm-before -p "kill-session #S? (y/n)" kill-session
# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind-key C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"
# Detach from session
bind-key d detach
bind-key D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

#======================================================================
# Window monitoring for activity and silence 
#======================================================================
bind-key m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind-key M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'
# Activity bell and whistles
set -g visual-activity on

#======================================================================
# Copy mode, scroll and clipboard
#======================================================================
set -g @copy_use_osc52_fallback on
# Prefer vi style key table
setw -g mode-keys vi
bind-key [ copy-mode
bind-key p paste-buffer
bind-key C-p choose-buffer
bind-key -T copy-mode-vi v                 send-keys -X begin-selection
bind-key -T copy-mode-vi y                 send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi M-Up              send-keys -X scroll-up
bind-key -T copy-mode-vi M-Down            send-keys -X scroll-down
bind-key -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind-key -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind-key -T copy-mode-vi PageDown          send-keys -X page-down
bind-key -T copy-mode-vi PageUp            send-keys -X page-up
# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind-key -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind-key -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# wrap default shell in reattach-to-user-namespace if available
# there is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least window are not renamed to "reattach-to-user-namespace"
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

yank="~/.tmux/yank.sh"

# Copy selected text
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
bind-key -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "$yank"
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | $yank"

bind-key -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind-key -T copy-mode-vi MouseDown1Pane select-pane \;\
    send-keys -X clear-selection
    
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

set -g mode-style "fg=default,bg=$color_main"
# command line style
set -g message-style "fg=$color_main,bg=$color_dark"
# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

# setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#I:#W# #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"
# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"
# outline for active pane
setw -g pane-active-border-style "fg=$color_main"
# general status bar settings
set -g status on
set -g status-interval 60
# set -g status-position top
set -g status-justify left
set -g status-right-length 100

wg_session="#[fg=$color_session_text] #S #[default]"
wg_cpu="#[fg=$color_secondary] CPU: #{cpu_percentage} #[default]"
wg_battery="#{battery_status_fg} #{battery_icon_status} #{battery_percentage} #[default]"
wg_date="#[fg=$color_secondary] %h %d %H:%M#[default]"
wg_user_host="#[fg=$color_secondary] USER: #(whoami) #[default]"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed $wg_cpu|$wg_user_host|$wg_date $wg_battery"


#======================================================================
# Plugins 
#======================================================================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Configure tmux-battery widget colors
set -g @batt_color_full_charge "#[fg=$color_level_ok]"
set -g @batt_color_high_charge "#[fg=$color_level_ok]"
set -g @batt_color_medium_charge "#[fg=$color_level_warn]"
set -g @batt_color_low_charge "#[fg=$color_level_stress]"

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_dark"
set -g @prefix_highlight_bg "$color_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_dark,bg=$color_secondary"

# Initialize TMUX plugin manager
# (REQUIRED FOR USING PLUGINS)
# (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
